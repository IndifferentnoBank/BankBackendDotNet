version: "3.8"

services:
  coreservice.presentation:
    image: coreservice.presentation
    build:
      context: .
      dockerfile: CoreService.Presentation/Dockerfile
    environment:
      - ConnectionStrings__PostgresDb=Host=coreservice-db;Port=5432;Database=coreservice_db;Username=coreservice_user;Password=coreservice_password
    depends_on:
      - coreservice-db
    ports:
      - "8081:8080"
    networks:
      - backend

  userservice.presentation:
    image: userservice.presentation
    build:
      context: .
      dockerfile: UserService.Presentation/Dockerfile
    environment:
      - ConnectionStrings__UserDb=Host=userservice-db;Port=5432;Database=userservice_db;Username=userservice_user;Password=userservice_password
    depends_on:
      - userservice-db
    ports:
      - "8082:8080"
    networks:
      - backend

  coreservice-db:
    image: postgres:15
    container_name: coreservice-db
    restart: always
    environment:
      POSTGRES_DB: coreservice_db
      POSTGRES_USER: coreservice_user
      POSTGRES_PASSWORD: coreservice_password
    expose:
      - "5432"
    volumes:
      - coreservice_data:/var/lib/postgresql/data
    networks:
      - backend

  userservice-db:
    image: postgres:15
    container_name: userservice-db
    restart: always
    environment:
      POSTGRES_DB: userservice_db
      POSTGRES_USER: userservice_user
      POSTGRES_PASSWORD: userservice_password
    expose:
      - "5432"
    volumes:
      - userservice_data:/var/lib/postgresql/data
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    platform: linux/amd64
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    platform: linux/amd64
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - backend

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - backend

volumes:
  coreservice_data: { }
  userservice_data: { }

networks:
  backend:
    driver: bridge
